spring:
  shardingsphere:
    datasource:
      names: ds0,ds1
      ds0:
        type: com.zaxxer.hikari.HikariDataSource
        driver-class-name: com.mysql.jdbc.Driver
        jdbc-url: jdbc:mysql://localhost:3306/spring-boot_0?serverTimezone=Asia/Shanghai&useUnicode=true&characterEncoding=utf-8&useSSL=false
        username: root
        password: root
      ds1:
        type: com.zaxxer.hikari.HikariDataSource
        driver-class-name: com.mysql.jdbc.Driver
        jdbc-url: jdbc:mysql://localhost:3306/spring-boot_1?serverTimezone=Asia/Shanghai&useUnicode=true&characterEncoding=utf-8&useSSL=false
        username: root
        password: root
    #分库分表
    sharding:
      tables:
        position: #数据库中要分表的逻辑名
          #配置主键生成策略
          key-generator:
            column: id
#            type: SNOWFLAKE #雪花算法
            type: Luch #雪花算法
          #分库
          databaseStrategy:
            inline:
              shardingColumn: id
              algorithmExpression: ds${id % 2}
        position_detail: #数据库中要分表的逻辑名
          #配置主键生成策略
          key-generator:
            column: id
            #type: SNOWFLAKE #雪花算法
            type: Luch #自定义
          #分库
          databaseStrategy:
            inline:
              shardingColumn: pid
              algorithmExpression: ds${pid % 2}
      #广播表，每个库中的表数据都一样
      broadcast-tables:
      - city
        city:
          key-generator:
            column: id
            type: SNOWFLAKE #雪花算法
